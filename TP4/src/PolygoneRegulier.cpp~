#include "PolygoneRegulier.hpp"
#include <iostream>
#include <cmath>

PolygoneRegulier::PolygoneRegulier(const Couleur& couleur, const Point& centre, int rayon, int nbCotes){

  _nbPoints = nbCotes;
  _points = new Point[nbCotes];

  for(int i = 0; i < _nbPoints; i++){

    _points[i]._x = centre._x + rayon*std::cos(3.14/_nbPoints);
    _points[i]._y = centre._y + rayon*std::sin(3.14/_nbPoints);

  }

}

const void PolygoneRegulier::afficher(){

  std::cout << "Polygone Regulier " << getCouleur() << " ";
  for(int i = 0; i < _nbPoints; i++){

    std::cout << _points[i]._x << "_" << _points[i]._y << " ";

  }

  std::cout << std::endl; 

}

const int PolygoneRegulier::getNbPoints()const {

  return _nbPoints;

}


const Point& PolygoneRegulier::getPoint(int indice) const {

  return _point[indice];

}
